{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/fold_sequences": {"post": {"summary": "Fold Sequences", "description": "Fold a list of sequences.", "operationId": "fold_sequences_fold_sequences_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_fold_sequences_fold_sequences_post"}}}, "required": true}, "responses": {"200": {"description": "People successfully found", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FoldOutput"}, "type": "array", "title": "Response Fold Sequences Fold Sequences Post"}, "examples": {"Jessica": {"value": [{"name": "seq1", "sequence": "MKTVRQERLKSIVRILERSKEPVSGAQLAEELSVSRQVIVQDIAYLRSLGYNIVATPRGYVLAGG", "pdb_string": "...", "mean_plddt": 88.27366638183594, "ptm": 0.8401376008987427}, {"name": "seq2", "sequence": "KALTARQQEVFDLIRDHISQTGMPPTRAEIAQRLGFRSPNAAEEHLKALARKGVIEIVSGASRGIRLLQEE", "pdb_string": "...", "mean_plddt": 82.7134780883789, "ptm": 0.8045980930328369}]}, "Tom": {"value": [{"name": "seq1", "sequence": "MKTVRQERLKSIVRILERSKEPVSGAQLAEELSVSRQVIVQDIAYLRSLGYNIVATPRGYVLAGG", "pdb_string": "...", "mean_plddt": 88.27366638183594, "ptm": 0.8401376008987427}, {"name": "seq2", "sequence": "KALTARQQEVFDLIRDHISQTGMPPTRAEIAQRLGFRSPNAAEEHLKALARKGVIEIVSGASRGIRLLQEE", "pdb_string": "...", "mean_plddt": 82.7134780883789, "ptm": 0.8045980930328369}]}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/fold_sequence": {"post": {"summary": "Fold Sequence", "description": "Fold a sequence.", "operationId": "fold_sequence_fold_sequence_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_fold_sequence_fold_sequence_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FoldOutput"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/fold_fasta": {"post": {"summary": "Fold Fasta", "description": "Fold sequences from a fasta file. Use the `fold_fasta/zipped` endpoint if you'd like a zip with pdb files for each sequence.", "operationId": "fold_fasta_fold_fasta_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_fold_fasta_fold_fasta_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/FoldOutput"}, "type": "array", "title": "Response Fold Fasta Fold Fasta Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/fold_fasta/zipped": {"post": {"summary": "Fold Fasta Zipped", "description": "Fold sequences from a fasta file and download the results as a zip file. Use the `fold_fasta` endpoint if you'd\nlike to return the results as a list.\nReturns a zip file containing the pdb files and a csv file with the confidence metrics for each sequence.", "operationId": "fold_fasta_zipped_fold_fasta_zipped_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_fold_fasta_zipped_fold_fasta_zipped_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_fold_fasta_fold_fasta_post": {"properties": {"fasta": {"type": "string", "format": "binary", "title": "Fasta", "description": "A fasta file containing sequences to fold."}, "num_recycles": {"type": "integer", "title": "Num Recycles", "description": "Number of recycles to run. Defaults to number used in training (4).", "default": 4}, "max_tokens_per_batch": {"type": "integer", "title": "Max Tokens Per Batch", "description": "Maximum number of tokens per gpu forward-pass. This will group shorter sequences together for batched prediction. Lowering this can help with out of memory issues, if these occur on short sequences. Default: 1024.", "default": 1024}}, "type": "object", "required": ["fasta"], "title": "Body_fold_fasta_fold_fasta_post"}, "Body_fold_fasta_zipped_fold_fasta_zipped_post": {"properties": {"fasta": {"type": "string", "format": "binary", "title": "Fasta", "description": "A fasta file containing sequences to fold."}, "num_recycles": {"type": "integer", "title": "Num Recycles", "description": "Number of recycles to run. Defaults to number used in training (4).", "default": 4}, "max_tokens_per_batch": {"type": "integer", "title": "Max Tokens Per Batch", "description": "Maximum number of tokens per gpu forward-pass. This will group shorter sequences together for batched prediction. Lowering this can help with out of memory issues, if these occur on short sequences. Default: 1024.", "default": 1024}}, "type": "object", "required": ["fasta"], "title": "Body_fold_fasta_zipped_fold_fasta_zipped_post"}, "Body_fold_sequence_fold_sequence_post": {"properties": {"sequence": {"type": "string", "title": "Sequence", "description": "The sequence to fold."}, "name": {"type": "string", "title": "Name", "description": "Name of the sequence. If not provided, the sequence will be named the first 20 letters of the sequence."}, "num_recycles": {"type": "integer", "title": "Num Recycles", "description": "Number of recycles to run. Defaults to number used in training (4).", "default": 4}}, "type": "object", "required": ["sequence"], "title": "Body_fold_sequence_fold_sequence_post"}, "Body_fold_sequences_fold_sequences_post": {"properties": {"seqs": {"items": {"$ref": "#/components/schemas/SequenceInput"}, "type": "array", "title": "Seqs", "description": "A list of sequences to fold.", "examples": [{"Jessica": {"value": [{"name": "seq1", "sequence": "MKTVRQERLKSIVRILERSKEPVSGAQLAEELSVSRQVIVQDIAYLRSLGYNIVATPRGYVLAGG"}, {"name": "seq2", "sequence": "KALTARQQEVFDLIRDHISQTGMPPTRAEIAQRLGFRSPNAAEEHLKALARKGVIEIVSGASRGIRLLQEE"}]}, "Tom": {"value": [{"name": "seq4", "sequence": "MKTVRQERLKSIVRILERSKEPVSGAQLAEELSVSRQVIVQDIAYLRSLGYNIVATPRGYVLAGG"}, {"name": "seq3", "sequence": "KALTARQQEVFDLIRDHISQTGMPPTRAEIAQRLGFRSPNAAEEHLKALARKGVIEIVSGASRGIRLLQEE"}]}}]}, "num_recycles": {"type": "integer", "title": "Num Recycles", "description": "Number of recycles to run. Defaults to number used in training (4).", "default": 4, "examples": [4, 4]}, "max_tokens_per_batch": {"type": "integer", "title": "Max Tokens Per Batch", "description": "Maximum number of tokens per gpu forward-pass. This will group shorter sequences together for batched prediction. Lowering this can help with out of memory issues, if these occur on short sequences. Default: 1024.", "default": 1024, "examples": [1024, 1024]}, "chunk_size": {"type": "integer", "title": "Chunk Size", "description": "Chunks axial attention computation to reduce memory usage from O(L^2) to O(L). Equivalent to running a for loop over chunks of each dimension. Lower values will result in lower memory usage at the cost of speed. Recommended values: 128, 64, 32. Default: None.", "examples": [null, null]}}, "type": "object", "required": ["seqs"], "title": "Body_fold_sequences_fold_sequences_post"}, "FoldOutput": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name of the sequence."}, "sequence": {"type": "string", "title": "Sequence", "description": "The protein sequence."}, "pdb_string": {"type": "string", "title": "Pdb String", "description": "The pdb string of the folded sequence. Save this string to a .pdf file."}, "mean_plddt": {"type": "number", "title": "Mean Plddt", "description": "The mean pLDDT of the folded sequence."}, "ptm": {"type": "number", "title": "Ptm", "description": "The pTM of the folded sequence."}}, "type": "object", "required": ["name", "sequence", "pdb_string", "mean_plddt", "ptm"], "title": "FoldOutput", "description": "A folded sequence output from the model."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "SequenceInput": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name for the sequence. If not provided, the sequence will be named the first 20 letters of the sequence."}, "sequence": {"type": "string", "title": "Sequence", "description": "The protein sequence to fold."}}, "type": "object", "required": ["sequence"], "title": "SequenceInput", "description": "A sequence input to the model."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}